<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnGuardar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        34Vv/g2fkgwfkXh5uAAAAABJRU5ErkJggg==
</value>
  </data>
</root>